{"version":3,"sources":["components/DayColumn/DayColumn.tsx","components/WeeksColumn/WeeksColumn.tsx","components/ScrollList/ScrollList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DayColumn","props","monday","classes","useStyles","className","wrapper","dayWrapper","Typography","plus","day","makeStyles","createStyles","display","border","flexGrow","name","WeeksColumn","week","weekNumber","ScrollList","initialOffset","useState","listWidth","setListWidth","setWeek","listRef","useRef","useLayoutEffect","resizeListener","screenWidth","window","innerWidth","addEventListener","removeEventListener","height","itemCount","itemSize","layout","width","initialScrollOffset","ref","index","style","listItem","Box","dateWrapper","DateTime","now","startOf","monthLong","year","buttonWrapper","Button","color","variant","onClick","current","scrollToItem","prevState","boxSizing","background","justifyContent","margin","gap","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75915c51.chunk.js","sourcesContent":["import React from \"react\";\nimport { DayColumnProps } from \"./DayColumn.types\";\nimport { createStyles, makeStyles, Typography } from \"@material-ui/core\";\n\nexport const DayColumn: React.FC<DayColumnProps> = (props) => {\n  const {monday} = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({day: 0}).day}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({day: 1}).day}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({day: 2}).day}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({day: 3}).day}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({day: 4}).day}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({day: 5}).day}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({day: 6}).day}</Typography>\n      </div>\n    </div>\n  )\n};\n\nconst useStyles = makeStyles(() => createStyles({\n  wrapper: {\n    display: 'flex',\n  },\n  dayWrapper: {\n    border: '1px solid black',\n    flexGrow: 1,\n  },\n}), {name: \"DayColumn\"});\n","import React from \"react\";\nimport { WeeksColumnProps } from \"./WeeksColumn.types\";\nimport { createStyles, makeStyles, Typography } from \"@material-ui/core\";\n\nexport const WeeksColumn: React.FC<WeeksColumnProps> = (props) => {\n  const {monday} = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({week: 0}).weekNumber}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({week: 1}).weekNumber}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({week: 2}).weekNumber}</Typography>\n      </div>\n      <div className={classes.dayWrapper}>\n        <Typography>{monday.plus({week: 3}).weekNumber}</Typography>\n      </div>\n    </div>\n  )\n};\n\n\nconst useStyles = makeStyles(() => createStyles({\n  wrapper: {\n    display: 'flex',\n  },\n  dayWrapper: {\n    border: '1px solid black',\n    flexGrow: 1,\n  },\n}), {name: \"WeeksColumn\"});\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { DateTime } from \"luxon\";\nimport { Box, Button, createStyles, makeStyles, Typography } from \"@material-ui/core\";\nimport { DayColumn } from \"../DayColumn\";\nimport { WeeksColumn } from \"../WeeksColumn\";\n\nexport const ScrollList = () => {\n  const classes = useStyles();\n  const initialOffset = 500;\n\n  const [listWidth, setListWidth] = useState(0);\n  const [week, setWeek] = useState(false);\n\n  const listRef = useRef<List>(null)\n\n  const scrollToToday = () => {\n    if (listRef && listRef.current) listRef.current.scrollToItem(initialOffset)\n  }\n\n  useLayoutEffect(() => {\n    const resizeListener = () => {\n      const screenWidth = window.innerWidth;\n      setListWidth(screenWidth)\n    };\n    resizeListener();\n    window.addEventListener(\"resize\", resizeListener);\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, []);\n\n  const Column = ({index, style}: { index: number, style: any }) => (\n    <div style={style} className={classes.listItem}>\n      {week\n        ? (\n          <Box>\n            <Box className={classes.dateWrapper}>\n              <Typography>{DateTime.now().plus({week: (4 * index) - 4 * initialOffset}).startOf(\"week\").monthLong}</Typography>\n              <Typography>{DateTime.now().plus({week: (4 * index) - 4 * initialOffset}).startOf(\"week\").year}</Typography>\n            </Box>\n            <WeeksColumn monday={DateTime.now().plus({week: (4 * index) - 4 * initialOffset}).startOf(\"week\")}/>\n          </Box>\n        ) : (\n          <Box>\n            <Box className={classes.dateWrapper}>\n              <Typography>{DateTime.now().plus({week: index - initialOffset}).weekNumber}</Typography>\n              <Typography>{DateTime.now().plus({week: index - initialOffset}).year}</Typography>\n            </Box>\n            <DayColumn monday={DateTime.now().plus({week: index - initialOffset}).startOf(\"week\")}/>\n          </Box>\n        )}\n    </div>\n  );\n\n  return (\n    <>\n      <List\n        height={200}\n        itemCount={1000}\n        itemSize={300}\n        layout=\"horizontal\"\n        width={listWidth}\n        initialScrollOffset={initialOffset * 300}\n        ref={listRef}\n      >\n        {Column}\n      </List>\n      <Box className={classes.buttonWrapper}>\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={scrollToToday}\n        >\n          Today\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => setWeek((prevState) => !prevState)}\n        >\n          {week ? \"days\" : \"weeks\"}\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    listItem: {\n      boxSizing: \"border-box\",\n      background: \"lightblue\",\n      border: \"1px solid teal\",\n    },\n    buttonWrapper: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      margin: \"20px\",\n      gap: \"20px\",\n    },\n    dateWrapper: {\n      display: \"flex\",\n      gap: \"20px\",\n      justifyContent: \"center\",\n    }\n  }),\n);\n\n\n","import React from 'react';\nimport './App.css';\nimport { ScrollList } from \"./components/ScrollList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScrollList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}